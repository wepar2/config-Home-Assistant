substitutions:
  device_name: "medidor"

esphome:
  name: medidor

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "MedidorAP"
    password: !secret hotspot_pass

  manual_ip:
    # Set this to the IP of the ESP
    static_ip: 192.168.1.36
    # Set this to the IP address of the router. Often ends with .1
    gateway: 192.168.1.1
    # The subnet of the network. 255.255.255.0 works for most home networks.
    subnet: 255.255.255.0

captive_portal:

# Enable OTA updates
ota:
  password: !secret ota_password

#web_server:
  #port: 80


# Enable Home Assistant API
api:
  #encryption:
    #key: "95+DI4apgCQzC8PdOAggciNHEQuhK4OIvslTxvI/I7I="

# Indicamos los pines donde hemos conectado TX y RX del dispositivo, teniendo en cuenta que siempre han de ser invertidos TX->RX, RX->TX
uart:
  rx_pin: GPIO16
  tx_pin: GPIO17
  baud_rate: 9600
  # stop_bits solo es necesario si así lo indica el log mientras probamos el circuito
  #stop_bits: 2

sensor:
  - platform: pzemac
    current:
      name: 'Current'
    voltage:
      name: 'Voltage'
    energy:
      name: 'Energy'
      # convert it to kWh
      filters:
        - multiply: 0.001
      unit_of_measurement: 'kWh'
      accuracy_decimals: 3
    power:
      name: 'Power'
    frequency:
      name: 'Frequency'
    power_factor:
      name: 'Power Factor'
    update_interval: 5s

    # Uptime sensor.
  - platform: uptime
    name: ${device_name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${device_name} WiFi Signal
    update_interval: 60s
  
  # Text sensors with general information.
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name} IP

binary_sensor:
  - platform: status
    name: "${device_name} Status"

# Indicamos el pin del LED de la placa para que parpadee según su estado
# https://esphome.io/components/status_led.html
status_led:
  pin: GPIO2
  
switch:
  - platform: restart
    name: "${device_name} Reboot"
    
  - platform: safe_mode
    name: "${device_name} (Safe Mode)"